<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.liu.mapper.UserMapper">

    <!--sql片段-->
    <!--
        经验：1. 只写单表的
             2. 不能带where子句
    -->
    <sql id="liuSql">
        <if test="userEx != null">
            <if test="userEx.sex != null">
                and user.sex=#{userEx.sex}
            </if>
            <if test="userEx.username !=null">
                and user.username like '%${userEx.username}%'
            </if>
        </if>
    </sql>

    <select id="queryUserZH" parameterType="com.liu.bz.UserBz" resultType="com.liu.po.UserEx">
        select
            *
        from
            user
        <where>
<!--            <if test="userEx != null">-->
<!--                <if test="userEx.sex != null">-->
<!--                    and user.sex=#{userEx.sex}-->
<!--                </if>-->
<!--                <if test="userEx.username !=null">-->
<!--                    and user.username like '%${userEx.username}%'-->
<!--                </if>-->
<!--            </if>-->
            <include refid="liuSql" />
        </where>
    </select>
    
    <select id="queryUserCount" parameterType="com.liu.bz.UserBz" resultType="int">
        select
            count(*)
        from
            user
        <where>
            <include refid="liuSql" />
        </where>
    </select>

    <sql id="liuSql2">
        <foreach collection="moreIds" item="everyId" open="and (" close=")" separator="or">
            id=#{everyId}
        </foreach>
    </sql>

    <sql id="liuSql3">
        <foreach collection="moreIds" item="everyId" open="id in(" close=")" separator=",">
            #{everyId}
        </foreach>
    </sql>
    <select id="queryUserByMoreIds" parameterType="com.liu.bz.UserBz" resultType="com.liu.po.UserEx">
        select
            *
        from
            user
        <where>
<!--            <foreach collection="moreIds" item="everyId" open="and (" close=")" separator="or">-->
<!--                id=#{everyId}-->
<!--            </foreach>-->
            <!--<include refid="liuSql2"/>-->
            <include refid="liuSql3"/>
        </where>
    </select>
    

    <sql id="liuSql4">
        <foreach collection="moreIds" item="everyId" open="id between " close=";" separator="and">
            #{everyId}
        </foreach>
    </sql>
    <select id="queryUserByIds" parameterType="com.liu.bz.UserBz" resultType="com.liu.po.UserEx">
        select
            *
        from
            user
        <where>
<!--            <foreach collection="moreIds" item="everyId" open="id between " close=";" separator="and">-->
<!--                #{everyId}-->
<!--            </foreach>-->
            <include refid="liuSql4"></include>
        </where>
    </select>


    <resultMap id="UsersToOrdersResultMap" type="com.liu.po.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="birthday" property="birthday"/>
        <result column="sex" property="sex"/>
        <result column="address" property="address"/>
        <collection property="ordersList" ofType="com.liu.po.Orders">
            <id column="orders_id" property="id"/>
            <result column="number" property="number"/>
            <result column="createtime" property="createtime"/>
        </collection>
    </resultMap>
    <select id="queryUserToOrders" resultMap="UsersToOrdersResultMap">
        select
		    user.*,
		    orders.id as orders_id,
		    orders.number,
		    orders.createtime
        from
		    user,
            orders
	    where
		    user.id = orders.user_id;
    </select>


    <resultMap id="UsersToOrderdetailResultMap" type="com.liu.po.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="birthday" property="birthday"/>
        <result column="sex" property="sex"/>
        <result column="address" property="address"/>
        <collection property="ordersList" ofType="com.liu.po.Orders">
            <id column="orders_ID" property="id"/>
            <result column="number" property="number"/>
            <result column="createtime" property="createtime"/>
            <collection property="orderdetailList" ofType="com.liu.po.Orderdetail">
                <id column="orderdetail_id" property="id"/>
                <result column="items_id" property="itemsId"/>
                <result column="items_num" property="itemsNum"/>
                <result column="orders_id" property="ordersId"/>
            </collection>
        </collection>
    </resultMap>
    <select id="queryUserToOrderdetail" resultMap="UsersToOrderdetailResultMap">
        	select
			user.*,
			orders.id as orders_ID,
			orders.number,
			orders.createtime,
            orderdetail.id as orderdetail_id,
            orderdetail.items_id,
            orderdetail.items_num,
            orderdetail.orders_id
		from
			user,
			orders,
            orderdetail
		where
			user.id = orders.user_id
		and
			orderdetail.orders_id=orders.id;
    </select>


    <resultMap id="UsersToItemsResultMap" type="com.liu.po.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="birthday" property="birthday"/>
        <result column="sex" property="sex"/>
        <result column="address" property="address"/>
        <collection property="ordersList" ofType="com.liu.po.Orders">
            <id column="orders_ID" property="id"/>
            <result column="number" property="number"/>
            <result column="createtime" property="createtime"/>
            <collection property="orderdetailList" ofType="com.liu.po.Orderdetail">
                <id column="orderdetail_id" property="id"/>
                <result column="items_id" property="itemsId"/>
                <result column="items_num" property="itemsNum"/>
                <result column="orders_id" property="ordersId"/>
                <association property="items" javaType="com.liu.po.Items">
                    <id column="items_ID" property="id"/>
                    <result column="name" property="name"/>
                    <result column="detail" property="detail"/>
                    <result column="price" property="price"/>
                </association>
            </collection>
        </collection>
    </resultMap>
    <select id="queryUserToItems" resultMap="UsersToItemsResultMap">
        select 
			user.*,
			orders.id as orders_ID,
			orders.number,
			orders.createtime,
            orderdetail.id as orderdetail_id,
            orderdetail.items_id,
            orderdetail.items_num,
            orderdetail.orders_id,
            items.id as items_ID,
            items.name,
            items.detail,
            items.price
		from
			user,
			orders,
            orderdetail,
            items
		where 
			user.id = orders.user_id
		and
			orderdetail.orders_id=orders.id
		and
			items.id=orderdetail.items_id;
    </select>



</mapper>